@page "/Read/{id:int}"
@model project.Pages.Products.ReadModel

@{
    ViewData["Title"] = "ReadModel";
}

    <style>

        .product-card {
            display: flex;
            gap: 20px;
            margin-bottom: 30px;
            padding-bottom: 20px;
            border-bottom: 1px solid #eee;
        }

        .product-image {
            width: 120px;
            height: 120px;
            background-color: #f0f4ff;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .product-image i {
            font-size: 40px;
            color: #4a6cf7;
        }

        .product-info {
            flex: 1;
        }

        .product-name {
            font-size: 20px;
            font-weight: 600;
            margin-bottom: 10px;
        }

        .product-price {
            font-size: 18px;
            font-weight: 700;
            color: #4a6cf7;
            margin-bottom: 10px;
        }

        .product-description {
            color: #777;
            font-size: 14px;
        }

        .option-title {
            font-weight: 600;
            margin-bottom: 10px;
        }

        .quantity-selector {
            display: flex;
            align-items: center;
            gap: 15px;
            margin-bottom: 25px;
        }

        .quantity-controls {
            display: flex;
            align-items: center;
            border: 1px solid #ddd;
            border-radius: 4px;
            overflow: hidden;
        }

        .quantity-btn {
            width: 40px;
            height: 40px;
            background-color: #f8f9fa;
            border: none;
            cursor: pointer;
            font-size: 18px;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
        }

        .quantity-btn:hover {
            background-color: #e9ecef;
        }

        .quantity-input {
            width: 60px;
            height: 40px;
            border: none;
            text-align: center;
            font-size: 16px;
            font-weight: 600;
            background-color: white;
        }

        .stock-info {
            color: #ff6b6b;
            font-size: 14px;
            font-weight: 500;
        }

        .action-buttons {
            display: flex;
            gap: 15px;
            margin-bottom: 25px;
        }

        .btn {
            display: inline-block;
            padding: 12px 24px;
            background-color: #4a6cf7;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
            flex: 1;
            text-align: center;
        }

        .btn:hover {
            background-color: #3a5ce5;
            transform: translateY(-2px);
        }

        .btn-large {
            padding: 15px 30px;
            font-size: 16px;
        }
        .btn-outline {
            background-color: transparent;
            border: 2px solid #4a6cf7;
            color: #4a6cf7;
        }

        .btn-outline:hover {
            background-color: #4a6cf7;
            color: white;
        }

        .wishlist-btn {
            width: 50px;
            height: 50px;
            background-color: #f8f9fa;
            border: 1px solid #ddd;
            border-radius: 4px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            font-size: 20px;
            color: #777;
            transition: all 0.3s ease;
        }

        .wishlist-btn:hover {
            color: #ff6b6b;
            border-color: #ff6b6b;
        }

        .form-message {
            margin-top: 20px;
            padding: 15px;
            border-radius: 4px;
            text-align: center;
            font-weight: 500;
            display: none;
        }

        .success {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }

        .error {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }

        @@media (max-width: 576px) {
            .product-card {
                flex-direction: column;
                text-align: center;
            }
            
            .product-image {
                width: 100%;
                max-width: 200px;
                margin: 0 auto;
            }
            
            .action-buttons {
                flex-direction: column;
            }
            
            .wishlist-btn {
                width: 100%;
            }
        }
    </style>

    <div class="container">

        <div class="product-card">
            <div class="product-image">
                <img src="@Model.Product.ImageUrl" />
            </div>
            <div class="product-info">
                <div class="product-name">@Model.Product.Name</div>
                <div class="product-price">$@Model.Product.Price</div>
                <div class="product-description">@Model.Product.Description</div>
            </div>
        </div>
        
        <form method="post" id="quantity-form">
            <div class="option-title">Quantity:</div>
            <div class="quantity-selector">
                <div class="quantity-controls">
                    <button type="button" class="quantity-btn" id="decrease-qty">-</button>
                    <input asp-for="Quantity" type="text" class="quantity-input" value="1" id="quantity" name="quantity">
                    <button type="button" class="quantity-btn" id="increase-qty">+</button>
                </div>
                @* <span class="stock-info">Only 12 left in stock</span> *@
            </div>
            
            <div class="action-buttons">
                <button type="submit" class="btn btn-large" id="submit-btn">
                    <i class="fas fa-shopping-cart"></i> Add to Cart
                </button>
                @* <button type="button" class="wishlist-btn" id="wishlist-btn">
                    <i class="far fa-heart"></i>
                </button> *@
            </div>
        </form>
        
        <div id="form-message" class="form-message"></div>
    </div>

    <script>
        // Quantity Selector Functionality
        const quantityInput = document.getElementById('quantity');
        const decreaseBtn = document.getElementById('decrease-qty');
        const increaseBtn = document.getElementById('increase-qty');
        const form = document.getElementById('quantity-form');
        const formMessage = document.getElementById('form-message');
const wishlistBtn = document.getElementById('wishlist-btn');
        
        // Decrease quantity
        decreaseBtn.addEventListener('click', function() {
            let currentValue = parseInt(quantityInput.value);
            if (currentValue > 1) {
                quantityInput.value = currentValue - 1;
            }
        });
        
        // Increase quantity
        increaseBtn.addEventListener('click', function() {
            let currentValue = parseInt(quantityInput.value);
            if (currentValue < 100) { // Max based on stock
                quantityInput.value = currentValue + 1;
            }
        });
        
        // Form submission
        form.addEventListener('submit', function(e) {
            e.preventDefault();
            
            const quantity = quantityInput.value;
            
            // Show success message
            formMessage.textContent = Successfully added ${quantity} item(s) to your cart!;
            formMessage.className = 'form-message success';
            formMessage.style.display = 'block';
            
            // In a real application, you would send the data to the server here
            console.log(Form submitted with quantity: ${quantity});
            
            // Reset form after 3 seconds
            setTimeout(() => {
                formMessage.style.display = 'none';
            }, 3000);
        });

        
        // Validate quantity input
        quantityInput.addEventListener('change', function() {
            let value = parseInt(this.value);
            
            if (isNaN(value) || value < 1) {
                this.value = 1;
            } else if (value > 12) {
                this.value = 12;
                formMessage.textContent = 'Cannot exceed available stock!';
                formMessage.className = 'form-message error';
                formMessage.style.display = 'block';
                
                setTimeout(() => {
                    formMessage.style.display = 'none';
                }, 3000);
            }
        });
    </script>