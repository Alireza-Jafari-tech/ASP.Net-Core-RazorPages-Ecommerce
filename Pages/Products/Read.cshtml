@page "/Read/{id:int}"
@model project.Pages.Products.ReadModel

@{
    ViewData["Title"] = Model.Product.Name;
}

<style>
    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 40px 20px;
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 60px;
        align-items: start;
    }

    .product-card {
        background: white;
        border-radius: 15px;
        padding: 40px;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.08);
        border: 1px solid #f0f0f0;
    }

    .product-image {
        width: 100%;
        height: 400px;
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 30px;
        overflow: hidden;
    }

        .product-image img {
            max-width: 80%;
            max-height: 80%;
            object-fit: contain;
        }

    .product-info {
        text-align: center;
    }

    .product-name {
        font-size: 32px;
        font-weight: 700;
        color: #333;
        margin-bottom: 20px;
        line-height: 1.3;
    }

    .product-price {
        font-size: 36px;
        font-weight: 800;
        color: #4a6cf7;
        margin-bottom: 25px;
    }

    .product-description {
        color: #666;
        line-height: 1.7;
        font-size: 16px;
        text-align: left;
        background: #f8f9fa;
        padding: 25px;
        border-radius: 10px;
        border-left: 4px solid #4a6cf7;
    }

    /* Form Styling */
    #quantity-form {
        background: white;
        padding: 40px;
        border-radius: 15px;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.08);
        border: 1px solid #f0f0f0;
    }

    .option-title {
        font-size: 18px;
        font-weight: 600;
        color: #333;
        margin-bottom: 20px;
        display: flex;
        align-items: center;
        gap: 10px;
    }

        .option-title::before {
            content: "ðŸ“¦";
            font-size: 20px;
        }

    .quantity-selector {
        display: flex;
        align-items: center;
        gap: 20px;
        margin-bottom: 30px;
    }

    .quantity-controls {
        display: flex;
        align-items: center;
        border: 2px solid #e9ecef;
        border-radius: 10px;
        overflow: hidden;
        background: white;
        transition: all 0.3s ease;
    }

        .quantity-controls:focus-within {
            border-color: #4a6cf7;
            box-shadow: 0 0 0 3px rgba(74, 108, 247, 0.1);
        }

    .quantity-btn {
        width: 50px;
        height: 50px;
        background: #f8f9fa;
        border: none;
        cursor: pointer;
        font-size: 20px;
        font-weight: 600;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s ease;
        color: #555;
    }

        .quantity-btn:hover {
            background: #4a6cf7;
            color: white;
        }

    .quantity-input {
        width: 80px;
        height: 50px;
        border: none;
        text-align: center;
        font-size: 18px;
        font-weight: 700;
        color: #333;
        background: white;
    }

        .quantity-input:focus {
            outline: none;
            background: #f8f9fa;
        }

    .action-buttons {
        display: flex;
        gap: 15px;
        margin-bottom: 20px;
    }

    .btn {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
        padding: 16px 32px;
        background: #4a6cf7;
        color: white;
        border: none;
        border-radius: 10px;
        cursor: pointer;
        font-weight: 600;
        font-size: 16px;
        transition: all 0.3s ease;
        text-decoration: none;
        flex: 1;
    }

        .btn:hover {
            background: #3a5ce5;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(74, 108, 247, 0.3);
        }

    .btn-large {
        padding: 18px 36px;
        font-size: 17px;
    }

    /* Form Message */
    .form-message {
        padding: 20px;
        border-radius: 10px;
        text-align: center;
        font-weight: 600;
        margin-top: 20px;
        display: none;
        animation: slideIn 0.3s ease;
    }

        .form-message.success {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
            display: block;
        }

        .form-message.error {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
            display: block;
        }

    /* Animation */
    @@keyframes slideIn {
        from {
            opacity: 0;
            transform: translateY(-10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    /* Responsive Design */
    @@media (max-width: 968px) {
        .container {
            grid-template-columns: 1fr;
            gap: 40px;
            padding: 20px;
        }

        .product-image {
            height: 300px;
        }

        .product-name {
            font-size: 28px;
        }

        .product-price {
            font-size: 32px;
        }
    }

    @@media (max-width: 576px) {
        .container {
            padding: 15px;
            gap: 30px;
        }

        .product-card,
        #quantity-form {
            padding: 30px 20px;
        }

        .product-image {
            height: 250px;
        }

        .product-name {
            font-size: 24px;
        }

        .product-price {
            font-size: 28px;
        }

        .quantity-selector {
            flex-direction: column;
            align-items: stretch;
            gap: 15px;
        }

        .quantity-controls {
            justify-content: center;
        }

        .action-buttons {
            flex-direction: column;
        }
    }
</style>

<div class="container">
    <!-- Product Card -->
    <div class="product-card">
        <div class="product-image">
            <img src="@Model.Product.ImageUrl" alt="@Model.Product.Name" />
        </div>
        <div class="product-info">
            <h1 class="product-name">@Model.Product.Name</h1>
            <div class="product-price">$@Model.Product.Price.ToString("F2")</div>
            <div class="product-description">@Model.Product.Description</div>
        </div>
    </div>

    <!-- Order Form -->
    <form method="post" id="quantity-form">
        <div class="option-title">Quantity</div>
        <div class="quantity-selector">
            <div class="quantity-controls">
                <button type="button" class="quantity-btn" id="decrease-qty">-</button>
                <input asp-for="Quantity" type="text" class="quantity-input" value="1" id="quantity" name="quantity">
                <button type="button" class="quantity-btn" id="increase-qty">+</button>
            </div>
        </div>

        <input asp-for="ProductId" value="@Model.Product.Id" type="number" hidden />

        <div class="action-buttons">
            <button type="submit" class="btn btn-large" id="submit-btn">
                <i class="fas fa-shopping-cart"></i> Add to Cart
            </button>
        </div>
    </form>

    <div id="form-message" class="form-message"></div>
</div>

<script>
    // Quantity Selector Functionality
    const quantityInput = document.getElementById('quantity');
    const decreaseBtn = document.getElementById('decrease-qty');
    const increaseBtn = document.getElementById('increase-qty');
    const form = document.getElementById('quantity-form');
    const formMessage = document.getElementById('form-message');

    // Decrease quantity
    decreaseBtn.addEventListener('click', function () {
        let currentValue = parseInt(quantityInput.value);
        if (currentValue > 1) {
            quantityInput.value = currentValue - 1;
        }
    });

    // Increase quantity
    increaseBtn.addEventListener('click', function () {
        let currentValue = parseInt(quantityInput.value);
        if (currentValue < 100) {
            quantityInput.value = currentValue + 1;
        }
    });

    // Form submission
    form.addEventListener('submit', function (e) {
        const quantity = quantityInput.value;
        const productName = document.querySelector('.product-name').textContent;

        // Show success message
        formMessage.textContent = `âœ… Added ${quantity} ${productName} to cart!`;
        formMessage.className = 'form-message success';
        formMessage.style.display = 'block';

        // Hide message after 3 seconds
        setTimeout(() => {
            formMessage.style.display = 'none';
        }, 3000);
    });

    // Validate quantity input
    quantityInput.addEventListener('change', function () {
        let value = parseInt(this.value);

        if (isNaN(value) || value < 1) {
            this.value = 1;
        } else if (value > 100) {
            this.value = 100;
            formMessage.textContent = 'Maximum quantity is 100!';
            formMessage.className = 'form-message error';
            formMessage.style.display = 'block';

            setTimeout(() => {
                formMessage.style.display = 'none';
            }, 3000);
        }
    });

    // Add some interactive feedback
    document.querySelectorAll('.quantity-btn').forEach(btn => {
        btn.addEventListener('click', function () {
            this.style.transform = 'scale(0.95)';
            setTimeout(() => {
                this.style.transform = '';
            }, 150);
        });
    });
</script>